#!/bin/bash

url="http://localhost:8082/index.php"
set_keys_query_arg="?set_keys"
no_oom_query_arg="?no_oom"
oom_query_arg="?oom"
threads=3
iterations=20

select_random_url() {
    local urls=("$url$oom_query_arg" "$url$no_oom_query_arg")
    local random_index=$((RANDOM % 2))
    echo "${urls[random_index]}"
}

# Function to send requests
send_requests() {
    local thread_number=$1
    for ((i=1; i<=iterations; i++))
    do
        url_to_request=$(select_random_url)
        echo "Sending request $i from thread $thread_number to $url_to_request..."
        curl -sS "$url_to_request&thread=$thread_number&iteration=$i" >/dev/null
    done
    echo "Thread $thread_number completed."
}

echo "Sending one request with query argument...${url}${set_keys_query_arg}"
curl -sS "${url}${set_keys_query_arg}" >/dev/null

# Run the send_requests function in background threads
for ((t=1; t<=threads; t++))
do
    send_requests $t &
    pids[$t]=$!
done

# Function to handle SIGINT signal (Ctrl+C)
handle_sigint() {
    echo "SIGINT signal received. Canceling all threads..."
    for ((t=1; t<=threads; t++))
    do
        kill ${pids[$t]} >/dev/null 2>&1
    done
    exit 0
}

# Register the SIGINT signal handler
trap handle_sigint SIGINT

# Wait for all threads to finish
wait

echo "All threads completed."
